{"ast":null,"code":"var _jsxFileName = \"/Users/kushagra/Documents/ovor/frontend/src/components/MetricsDisplay.js\";\nimport React from 'react';\nimport MetricCard from './MetricCard';\nimport ComparisonBar from './ComparisonBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MetricsDisplay = ({\n  metrics,\n  history,\n  language\n}) => {\n  if (!metrics) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-8\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-gray-600 hindi-font\",\n        children: language === 'en' ? 'No data available' : 'рдХреЛрдИ рдбреЗрдЯрд╛ рдЙрдкрд▓рдмреНрдз рдирд╣реАрдВ'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  }\n  const metricConfig = [{\n    key: 'householdsRegistered',\n    title: language === 'en' ? 'Households Registered' : 'рдкрдВрдЬреАрдХреГрдд рдкрд░рд┐рд╡рд╛рд░',\n    dataKey: 'householdsRegistered',\n    tooltip: language === 'en' ? 'Number of households registered under MGNREGA in this district' : 'рдЗрд╕ рдЬрд┐рд▓реЗ рдореЗрдВ рдордирд░реЗрдЧрд╛ рдХреЗ рддрд╣рдд рдкрдВрдЬреАрдХреГрдд рдкрд░рд┐рд╡рд╛рд░реЛрдВ рдХреА рд╕рдВрдЦреНрдпрд╛',\n    icon: 'ЁЯПа'\n  }, {\n    key: 'personDaysGenerated',\n    title: language === 'en' ? 'Person-Days Generated' : 'рд╡реНрдпрдХреНрддрд┐-рджрд┐рд╡рд╕ рдЙрддреНрдкрдиреНрди',\n    dataKey: 'personDaysGenerated',\n    tooltip: language === 'en' ? 'Total employment days generated for workers' : 'рд╢реНрд░рдорд┐рдХреЛрдВ рдХреЗ рд▓рд┐рдП рдЙрддреНрдкрдиреНрди рдХреБрд▓ рд░реЛрдЬрдЧрд╛рд░ рджрд┐рд╡рд╕',\n    icon: 'ЁЯСе'\n  }, {\n    key: 'totalWagesPaid',\n    title: language === 'en' ? 'Total Wages Paid' : 'рдХреБрд▓ рдордЬрджреВрд░реА рднреБрдЧрддрд╛рди',\n    dataKey: 'totalWagesPaid',\n    tooltip: language === 'en' ? 'Total wages paid to workers in Indian Rupees' : 'рд╢реНрд░рдорд┐рдХреЛрдВ рдХреЛ рднреБрдЧрддрд╛рди рдХреА рдЧрдИ рдХреБрд▓ рдордЬрджреВрд░реА (рд░реБрдкрдпреЗ рдореЗрдВ)',\n    icon: 'ЁЯТ░',\n    isCurrency: true\n  }, {\n    key: 'worksCompleted',\n    title: language === 'en' ? 'Works Completed' : 'рдХрд╛рд░реНрдп рдкреВрд░реНрдг',\n    dataKey: 'worksCompleted',\n    tooltip: language === 'en' ? 'Number of development works completed' : 'рдкреВрд░реНрдг рдХрд┐рдП рдЧрдП рд╡рд┐рдХрд╛рд╕ рдХрд╛рд░реНрдпреЛрдВ рдХреА рд╕рдВрдЦреНрдпрд╛',\n    icon: 'тЬЕ'\n  }, {\n    key: 'averageWagePerPersonDay',\n    title: language === 'en' ? 'Average Wage per Day' : 'рдкреНрд░рддрд┐рджрд┐рди рдФрд╕рдд рдордЬрджреВрд░реА',\n    dataKey: 'averageWagePerPersonDay',\n    tooltip: language === 'en' ? 'Average wage paid per person per day in Indian Rupees' : 'рдкреНрд░рддрд┐ рд╡реНрдпрдХреНрддрд┐ рдкреНрд░рддрд┐рджрд┐рди рднреБрдЧрддрд╛рди рдХреА рдЧрдИ рдФрд╕рдд рдордЬрджреВрд░реА (рд░реБрдкрдпреЗ рдореЗрдВ)',\n    icon: 'ЁЯУК',\n    isCurrency: true\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8\",\n      children: metricConfig.map(config => /*#__PURE__*/_jsxDEV(MetricCard, {\n        title: config.title,\n        value: metrics[config.key],\n        history: history,\n        dataKey: config.dataKey,\n        language: language,\n        tooltip: config.tooltip,\n        icon: config.icon,\n        isCurrency: config.isCurrency\n      }, config.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-xl shadow-lg p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-6 text-center hindi-font\",\n        children: language === 'en' ? 'District vs State Average' : 'рдЬрд┐рд▓рд╛ рдмрдирд╛рдо рд░рд╛рдЬреНрдп рдФрд╕рдд'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: metricConfig.map(config => /*#__PURE__*/_jsxDEV(ComparisonBar, {\n          title: config.title,\n          districtValue: metrics[config.key],\n          stateValue: metrics.stateAverage ? metrics.stateAverage[config.key] : 0,\n          language: language,\n          isCurrency: config.isCurrency\n        }, config.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_c = MetricsDisplay;\nexport default MetricsDisplay;\nvar _c;\n$RefreshReg$(_c, \"MetricsDisplay\");","map":{"version":3,"names":["React","MetricCard","ComparisonBar","jsxDEV","_jsxDEV","MetricsDisplay","metrics","history","language","className","children","fileName","_jsxFileName","lineNumber","columnNumber","metricConfig","key","title","dataKey","tooltip","icon","isCurrency","map","config","value","districtValue","stateValue","stateAverage","_c","$RefreshReg$"],"sources":["/Users/kushagra/Documents/ovor/frontend/src/components/MetricsDisplay.js"],"sourcesContent":["import React from 'react';\nimport MetricCard from './MetricCard';\nimport ComparisonBar from './ComparisonBar';\n\nconst MetricsDisplay = ({ metrics, history, language }) => {\n  if (!metrics) {\n    return (\n      <div className=\"text-center py-8\">\n        <p className=\"text-lg text-gray-600 hindi-font\">\n          {language === 'en' ? 'No data available' : 'рдХреЛрдИ рдбреЗрдЯрд╛ рдЙрдкрд▓рдмреНрдз рдирд╣реАрдВ'}\n        </p>\n      </div>\n    );\n  }\n\n  const metricConfig = [\n    {\n      key: 'householdsRegistered',\n      title: language === 'en' ? 'Households Registered' : 'рдкрдВрдЬреАрдХреГрдд рдкрд░рд┐рд╡рд╛рд░',\n      dataKey: 'householdsRegistered',\n      tooltip: language === 'en' \n        ? 'Number of households registered under MGNREGA in this district'\n        : 'рдЗрд╕ рдЬрд┐рд▓реЗ рдореЗрдВ рдордирд░реЗрдЧрд╛ рдХреЗ рддрд╣рдд рдкрдВрдЬреАрдХреГрдд рдкрд░рд┐рд╡рд╛рд░реЛрдВ рдХреА рд╕рдВрдЦреНрдпрд╛',\n      icon: 'ЁЯПа'\n    },\n    {\n      key: 'personDaysGenerated',\n      title: language === 'en' ? 'Person-Days Generated' : 'рд╡реНрдпрдХреНрддрд┐-рджрд┐рд╡рд╕ рдЙрддреНрдкрдиреНрди',\n      dataKey: 'personDaysGenerated',\n      tooltip: language === 'en'\n        ? 'Total employment days generated for workers'\n        : 'рд╢реНрд░рдорд┐рдХреЛрдВ рдХреЗ рд▓рд┐рдП рдЙрддреНрдкрдиреНрди рдХреБрд▓ рд░реЛрдЬрдЧрд╛рд░ рджрд┐рд╡рд╕',\n      icon: 'ЁЯСе'\n    },\n    {\n      key: 'totalWagesPaid',\n      title: language === 'en' ? 'Total Wages Paid' : 'рдХреБрд▓ рдордЬрджреВрд░реА рднреБрдЧрддрд╛рди',\n      dataKey: 'totalWagesPaid',\n      tooltip: language === 'en'\n        ? 'Total wages paid to workers in Indian Rupees'\n        : 'рд╢реНрд░рдорд┐рдХреЛрдВ рдХреЛ рднреБрдЧрддрд╛рди рдХреА рдЧрдИ рдХреБрд▓ рдордЬрджреВрд░реА (рд░реБрдкрдпреЗ рдореЗрдВ)',\n      icon: 'ЁЯТ░',\n      isCurrency: true\n    },\n    {\n      key: 'worksCompleted',\n      title: language === 'en' ? 'Works Completed' : 'рдХрд╛рд░реНрдп рдкреВрд░реНрдг',\n      dataKey: 'worksCompleted',\n      tooltip: language === 'en'\n        ? 'Number of development works completed'\n        : 'рдкреВрд░реНрдг рдХрд┐рдП рдЧрдП рд╡рд┐рдХрд╛рд╕ рдХрд╛рд░реНрдпреЛрдВ рдХреА рд╕рдВрдЦреНрдпрд╛',\n      icon: 'тЬЕ'\n    },\n    {\n      key: 'averageWagePerPersonDay',\n      title: language === 'en' ? 'Average Wage per Day' : 'рдкреНрд░рддрд┐рджрд┐рди рдФрд╕рдд рдордЬрджреВрд░реА',\n      dataKey: 'averageWagePerPersonDay',\n      tooltip: language === 'en'\n        ? 'Average wage paid per person per day in Indian Rupees'\n        : 'рдкреНрд░рддрд┐ рд╡реНрдпрдХреНрддрд┐ рдкреНрд░рддрд┐рджрд┐рди рднреБрдЧрддрд╛рди рдХреА рдЧрдИ рдФрд╕рдд рдордЬрджреВрд░реА (рд░реБрдкрдпреЗ рдореЗрдВ)',\n      icon: 'ЁЯУК',\n      isCurrency: true\n    }\n  ];\n\n  return (\n    <div>\n      {/* Metrics Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8\">\n        {metricConfig.map((config) => (\n          <MetricCard\n            key={config.key}\n            title={config.title}\n            value={metrics[config.key]}\n            history={history}\n            dataKey={config.dataKey}\n            language={language}\n            tooltip={config.tooltip}\n            icon={config.icon}\n            isCurrency={config.isCurrency}\n          />\n        ))}\n      </div>\n\n      {/* Comparison Section */}\n      <div className=\"bg-white rounded-xl shadow-lg p-6\">\n        <h3 className=\"text-xl font-semibold mb-6 text-center hindi-font\">\n          {language === 'en' ? 'District vs State Average' : 'рдЬрд┐рд▓рд╛ рдмрдирд╛рдо рд░рд╛рдЬреНрдп рдФрд╕рдд'}\n        </h3>\n        <div className=\"space-y-6\">\n          {metricConfig.map((config) => (\n            <ComparisonBar\n              key={config.key}\n              title={config.title}\n              districtValue={metrics[config.key]}\n              stateValue={metrics.stateAverage ? metrics.stateAverage[config.key] : 0}\n              language={language}\n              isCurrency={config.isCurrency}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MetricsDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}